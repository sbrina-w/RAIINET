diff --git a/changeevent.h b/changeevent.h
index 7e482cf..db9e943 100644
--- a/changeevent.h
+++ b/changeevent.h
@@ -2,6 +2,7 @@
 #define CHANGEEVENT_H
 
 enum class ChangeEvent {
+    GameStart,
     LinkMoved,
     AbilityUsed,
     DownloadOccurred,
diff --git a/gamemodel.cc b/gamemodel.cc
index 3e5f3dd..9bdc172 100644
--- a/gamemodel.cc
+++ b/gamemodel.cc
@@ -109,10 +109,6 @@ Player* GameModel::getPlayer(int playerId) const {
     return nullptr;
 }
 
-Player* GameModel::getCurrentPlayer() const {
-    return getPlayer(currentTurn);
-}
-
 void GameModel::useAbility(int /*playerID*/, int /*abilityID*/, int /*target*/)
 {
     // TODO: implement abilities
@@ -150,6 +146,6 @@ int GameModel::getCurrentTurn() const
     return currentTurn;
 }
 
-Player* GameModel::getCurrentPlayer() {
+Player* GameModel::getCurrentPlayer() const {
     return players[(currentTurn - 1) % players.size()];
 }
diff --git a/gamemodel.h b/gamemodel.h
index 7e8ce26..f8eb340 100644
--- a/gamemodel.h
+++ b/gamemodel.h
@@ -37,13 +37,12 @@ public:
     //game state
     bool isGameOver();
     Player* getPlayer(int playerId) const;
-    Player* getCurrentPlayer() const;
 
     //accessors
     Board &getBoard();
     const Board &getBoard() const;
     int getCurrentTurn() const;
-    Player* getCurrentPlayer();
+    Player* getCurrentPlayer() const;
 };
 
 #endif
diff --git a/gamesetup.h b/gamesetup.h
index c8db7cb..27c8f05 100644
--- a/gamesetup.h
+++ b/gamesetup.h
@@ -30,7 +30,6 @@ public:
     GameSetup();
     bool parseCommandLine(int argc, char* argv[]);
     const GameSetupConfig& getConfig() const;
-    void printUsage(const std::string& programName) const;
     bool initializeGame(class GameModel& model) const;
 };
 
diff --git a/main.cc b/main.cc
index 7b98132..29e3aa2 100644
--- a/main.cc
+++ b/main.cc
@@ -2,29 +2,34 @@
 #include "textdisplay.h"
 #include "changeevent.h"
 #include "gamesetup.h"
+#include "gamecontroller.h"
 // #include "graphicsdisplay.h" //uncomment later
 
 #include <iostream>
 
-int main(int argc, char* argv[]) {
-    //parse command line arguments
+int main(int argc, char *argv[])
+{
+    // parse command line arguments
     GameSetup setup;
-    //could include error message or usage of commands, 
-    if (!setup.parseCommandLine(argc, argv)) {
+    // could include error message or usage of commands,
+    if (!setup.parseCommandLine(argc, argv))
+    {
         return 1;
     }
 
-    const GameSetupConfig& config = setup.getConfig();
-    //initialize game model
+    const GameSetupConfig &config = setup.getConfig();
+    // initialize game model
     GameModel model;
+
+    // initialize the server ports
     model.getBoard().initServerPorts();
 
-    //set up displays based on config
-    TextDisplay view1(1), view2(2);      // ← pass in 1 and 2!
+    // set up displays based on config
+    TextDisplay view1(1), view2(2); // ← pass in 1 and 2!
     model.addObserver(&view1);
     model.addObserver(&view2);
 
-    //uncomment when implementing graphics display
+    // uncomment when implementing graphics display
 
     // GraphicsDisplay* graphicsView = nullptr;
     // if (config.graphicsEnabled) {
@@ -32,18 +37,24 @@ int main(int argc, char* argv[]) {
     //     model.addObserver(graphicsView);
     // }
 
-    if (!setup.initializeGame(model)) {
+    // put the model in setup, if it fails exit
+    if (!setup.initializeGame(model))
+    {
         std::cerr << "Failed to initialize game with provided config.\n";
         // if (graphicsView) delete graphicsView;
         // return 1;
     }
-    model.notify(ChangeEvent::TurnEnded);
-    std::cout << "\n-- Simulating a dummy move --\n";
-    model.moveLink('a', 0);
 
-    //for later 
-    // if (graphicsView) {
-    //     delete graphicsView;
-    // }
+    // to draw the initial board
+    model.notify(ChangeEvent::GameStart);
+
+    // 5) Enter game loop
+    GameController controller(model);
+    controller.play();
+
+    // for later
+    //  if (graphicsView) {
+    //      delete graphicsView;
+    //  }
     return 0;
 }
\ No newline at end of file
diff --git a/textdisplay.cc b/textdisplay.cc
index 33308e8..37a87fd 100644
--- a/textdisplay.cc
+++ b/textdisplay.cc
@@ -14,6 +14,7 @@ void TextDisplay::notify(GameModel &model, ChangeEvent event)
     // Redraw on any board‐changing or turn‐ending event
     switch (event)
     {
+    case ChangeEvent::GameStart:
     case ChangeEvent::LinkMoved:
     case ChangeEvent::DownloadOccurred:
     case ChangeEvent::AbilityUsed:
